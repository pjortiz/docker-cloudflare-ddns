name: Update Base Image Version File

on:
  schedule:
    - cron: '0 0 * * *' # Runs every day at midnight UTC (adjust as needed)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git credentials
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Get latest release version commit
        id: get-latest-version
        run: |
          VERSION=$(git ls-remote --tags https://github.com/timothymiller/cloudflare-ddns.git refs/tags/latest | cut -f1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if version has changed
        id: check-version
        run: |
          if [ -f base_version.txt ]; then
            LATEST_VERSION=${{ steps.get-latest-version.outputs.version }}
            CURRENT_VERSION=$(cat base_version.txt)
            echo "LATEST_VERSION: $LATEST_VERSION"
            echo "CURRENT_VERSION: $CURRENT_VERSION"
            if [ "$LATEST_VERSION" != "$CURRENT_VERSION" ]; then
              echo "Versions differ, updating version file."
              echo "version_changed=true" >> $GITHUB_OUTPUT
            else
              echo "Versions are the same, no update needed."
              echo "version_changed=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "Version file does not exist."
            echo "version_changed=true" >> $GITHUB_OUTPUT  # Indicate change to create the file
          fi

      - name: Update version file if changed
        if: steps.check-version.outputs.version_changed == 'true'
        run: |
          echo "${{ steps.get-latest-version.outputs.version }}" > base_version.txt

      - name: Commit and push changes if updated
        if: steps.check-version.outputs.version_changed == 'true'
        run: |
          git add base_version.txt
          git commit -m "Update base image version to latest release ${{ steps.get-latest-version.outputs.version }}"
          git push origin main
